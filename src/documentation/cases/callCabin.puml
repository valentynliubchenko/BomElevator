@startuml

actor Passenger

Passenger ->  FloorButton: pressDownButton()
activate FloorButton
FloorButton -> CommandService: getCommand("findNearestCabin", floor: int)
CommandService --> Controller: findNearestCabinCommand
Controller -> findNearestCabinCommand: execute
deactivate FloorButton

activate Controller
loop 3 times
Controller -> CommandService: getCommand("moveCabin", floor: int)
Controller <-- CommandService: moveCabinCommand
Controller -> moveCabinCommand: execute
Controller -> CommandService: getCommand("stopCabin")
Controller <-- CommandService: stopCabinCommand
Controller -> stopCabinCommand: execute
Controller -> CommandService: getCommand("openDoor")
Controller <-- CommandService: openDoorCommand
Controller -> openDoorCommand: execute
Controller -> CommandService: getCommand("closeDoor")
Controller <-- CommandService: closeDoorCommand
Controller -> closeDoorCommand: execute
end
deactivate Controller
@enduml

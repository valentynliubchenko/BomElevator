@startuml
entity "Controller (Reciver)"{

action()
floors: [] Floor
doorOpeningRestriction()
findNearestCabin()
}

"Controller (Reciver)" o-- "floors" Floor

entity Cabin{
id: int
}

entity SequenceOfStops {
id: int
stopFlors: int[]
currentFloor: int
commands: [] Command
}

Direction o-- SequenceOfStops

SequenceOfStops "1" o-- "1" Cabin
SequenceOfStops o-- "state" State


enum State{
GoingUp
GoingDown
Staying
}

enum Direction{
Upwards
Downwards
}


entity "CabinButton (Invoker)"{
cabinId: int
buttonValue: int
}


abstract "FloorButton (Invoker)"{
  press(): void
  unpress(): void
  isPressed(): bool
}

entity "Up FloorButton" {
}

entity "Down FloorButton" {
}

"Up FloorButton" --|> "FloorButton (Invoker)"
"Down FloorButton" --|> "FloorButton (Invoker)"

abstract Floor{
  id: int
  visit(): void
}

interface FloorWithUpButton {
  pressUpButton(): void
}

"Up FloorButton" "upButton" --o FloorWithUpButton

interface FloorWithDownButton {
 pressDownButton(): void
}

interface Command {
 execute()
}

"Down FloorButton" "downButton" --o FloorWithDownButton

entity FirstFloor {

}

FirstFloor --|> Floor
FirstFloor ..|> FloorWithUpButton

entity LastFloor {

}

LastFloor --|> Floor
LastFloor ..|> FloorWithDownButton

entity MiddleFloor {

}

MiddleFloor --|> Floor
MiddleFloor ..|> FloorWithUpButton
MiddleFloor ..|> FloorWithDownButton


"Controller (Reciver)" "1" o-- "0..N sequenceOfStops" SequenceOfStops

Direction "direction" --o "FloorButton (Invoker)"

enum ButtonState{
PRESSED
UNPRESSED
}

Cabin "1" o-- "M" "CabinButton (Invoker)"
ButtonState "isPressed " --o "FloorButton (Invoker)"
ButtonState "isPressed " --o "CabinButton (Invoker)"


class CheckOverweightCommand{
}
class MoveCabinCommand{
}
class DisplayOverweightCommand{
}
class CheckCabinDirectionCommand{
}
class OpenDoorCommand{
}
class CloseDoorCommand{
}
class DisplayCurrentPositionnCommand{
}
class  StopCabinCommand{
}

CheckOverweightCommand  ..|> Command

MoveCabinCommand  ..|> Command

DisplayOverweightCommand   ..|> Command

CheckCabinDirectionCommand   ..|> Command

OpenDoorCommand   ..|> Command

CloseDoorCommand   ..|> Command

DisplayCurrentPositionnCommand  ..|> Command

StopCabinCommand  ..|> Command

SequenceOfStops o-- "command" Command
@enduml
